---
pkg_templates:
  node:
    os: &pkg_templates_node_os >-
      {{
        {
            'Darwin': 'darwin',
            'Debian': 'linux',
            'Windows': 'win'
        }[ansible_os_family] | default('')
      }}
    arch: &pkg_templates_node_arch >-
      {{
        {
          'x86_64': 'x64',
          'aarch64': 'arm64',
          'i386': 'x86'
        }[ansible_architecture] | default('')
      }}
  go:
    os: &pkg_templates_go_os >-
      {{
        {
          'Darwin': 'darwin',
          'Debian': 'linux',
          'Windows': 'windows'
        }[ansible_os_family] | default('')
      }}
    arch: &pkg_templates_go_arch >-
      {{
        {
          'x86_64': 'amd64',
          'aarch64': 'arm64',
          'i386': '386'
        }[ansible_architecture] | default('')
      }}
  rustup:
    os: &pkg_templates_rustup_os >-
      {{
        {
          'Darwin': 'apple-darwin',
          'Debian': 'unknown-linux-gnu',
          'Windows': 'pc-windows-msvc'
        }[ansible_os_family] | default('')
      }}
    arch: &pkg_templates_rustup_arch >-
      {{
        {
          'x86_64': 'x86_64',
          'aarch64': 'aarch64'
        }[ansible_architecture] | default('')
      }}
  fzf:
    ext: &pkg_templates_fzf_ext >-
      {{
        {
          'Debian': 'tar.gz'
        }[ansible_os_family] | default('zip')
      }}
    inflate: &pkg_templates_fzf_inflate >-
      {{
        {
          'Debian': 'tar -C %(dest)s -xzvf %(src)s'
        }[ansible_os_family] | default('unzip -o -d %(dest)s %(src)s')
      }}


pkg:
  charts:
    - name: node
      archs: &archs-node
        - architecture: x86_64
          os_family: Debian
        - architecture: x86_64
          os_family: Darwin
        - architecture: x86_64
          os_family: Windows
        - architecture: aarch64
          os_family: Debian
        - architecture: aarch64
          os_family: Darwin
        - architecture: aarch64
          os_family: Windows
        - architecture: i386
          os_family: Windows
      version: 14.1.0
      template: &node_tempalte
        os: *pkg_templates_node_os
        arch: *pkg_templates_node_arch
        url: https://nodejs.org/dist/v%(version)s/node-v%(version)s-{{ pkg_templates.node.os }}-{{ pkg_templates.node.arch }}.tar.gz
        ext: &ext_targz tar.gz
        inflate: &inflate_targz tar -C %(dest)s -xzvf %(src)s
        creates: "*/bin/node"
      bins:
        - name: node14
          target: node
          src: &bin_src_bin "%(name)s-v%(version)s-{{ pkg_templates.node.os }}-{{ pkg_templates.node.arch }}/bin/%(target)s"
        - name: npm14
          target: npm
          src: *bin_src_bin
        - name: corepack14
          target: corepack
          src: *bin_src_bin
        - name: npx14
          target: npx
          src: *bin_src_bin

    - name: node
      archs: *archs-node
      version: "{{ pkg_versions.node.version }}"
      template: *node_tempalte
      bins:
        - name: node
          src: *bin_src_bin
        - name: corepack
          src: *bin_src_bin
        - name: npx
          src: *bin_src_bin
        - name: npm
          src: *bin_src_bin
        - name: prettier
          src: *bin_src_bin
        - name: serve
          src: *bin_src_bin
        - name: nodemon
          src: *bin_src_bin

    - name: go
      archs: *archs-node
      version: 1.20.13
      template: &template_go
        os: *pkg_templates_go_os
        arch: *pkg_templates_go_arch
        url: https://go.dev/dl/go%(version)s.{{ pkg_templates.go.os }}-{{ pkg_templates.go.arch }}.tar.gz
        ext: *ext_targz
        inflate: *inflate_targz
        creates: go/bin/go
      bins:
        - name: go20
          src: &bins_go_src go/bin/go
        - name: gofmt20
          src: &bins_go_fmt go/bin/gofmt

    - name: go
      archs: *archs-node
      version: "{{ pkg_versions.go.version }}"
      template: *template_go
      bins:
        - name: go
          src: *bins_go_src
        - name: gofmt
          src: *bins_go_fmt

    - name: fzf
      version: "{{ pkg_versions.fzf.version }}"
      template: &template_fzf
        os: *pkg_templates_go_os
        arch: *pkg_templates_go_arch
        url: https://github.com/junegunn/%(name)s/releases/download/%(version)s/%(name)s-%(version)s-{{ pkg_templates.go.os }}_{{ pkg_templates.go.arch }}.{{ pkg_templates.fzf.ext }}
        inflate: "{{ pkg_templates.fzf.inflate }}"
        ext: "{{ pkg_templates.fzf.ext }}"
        creates: fzf
      bins:
        - name: fzf
          src: fzf

    - name: jetbrains-mono
      version: "{{ pkg_versions.jetbrains_mono.version }}"
      template:
        os: all
        arch: share
        url: https://github.com/ryanoasis/nerd-fonts/releases/download/v%(version)s/JetBrainsMono.zip
        inflate: &inflate_unzip unzip -o -d %(dest)s %(src)s
        ext: &ext_zip zip
        creates: JetBrainsMonoNerdFontMono-*.ttf

    - name: rustup-init
      version: latest
      template:
        os: *pkg_templates_rustup_os
        arch: *pkg_templates_rustup_arch
        url: https://static.rust-lang.org/rustup/dist/{{ pkg_templates.rustup.arch }}-{{ pkg_templates.rustup.os }}/rustup-init
        inflate: |
          chmod u+x '%(src)s'
          RUSTUP_INIT_SKIP_PATH_CHECK=yes %(src)s -y
        creates: nothing
    
    - name: scala
      version: "{{ pkg_versions.scala.version }}"
      template:
        os: *pkg_templates_go_os
        arch: *pkg_templates_go_arch
        url: https://github.com/scala/scala3/releases/download/%(version)s/scala3-%(version)s.tar.gz
        ext: *ext_targz
        inflate: *inflate_targz
        creates: scala3-3.4.1/bin/scala
      bins:
        - name: scala
          src: scala3-{{ pkg_versions.scala.version }}/bin/scala
        - name: scalac
          src: scala3-{{ pkg_versions.scala.version }}/bin/scalac
        - name: scaladoc
          src: scala3-{{ pkg_versions.scala.version }}/bin/scaladoc

    - name: sbt
      version: "{{ pkg_versions.sbt.version }}"
      template:
        os: *pkg_templates_go_os
        arch: *pkg_templates_go_arch
        url: https://github.com/sbt/sbt/releases/download/v%(version)s/sbt-%(version)s.tgz
        ext: *ext_targz
        inflate: *inflate_targz
        creates: sbt/bin/sbt
      bins:
        - name: sbt
          src: sbt/bin/sbt

    - name: maven
      version: "{{ pkg_versions.maven.version }}"
      template:
        os: *pkg_templates_go_os
        arch: *pkg_templates_go_arch
        url: https://dlcdn.apache.org/maven/maven-3/%(version)s/binaries/apache-maven-%(version)s-bin.tar.gz
        ext: *ext_targz
        inflate: *inflate_targz
        creates: apache-maven-{{ pkg_versions.maven.version }}/bin/mvn
      bins:
        - name: mvn
          src: apache-maven-{{ pkg_versions.maven.version }}/bin/mvn





