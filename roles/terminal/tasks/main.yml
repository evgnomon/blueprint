- name: Gather OS specific variables
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}-{{ ansible_distribution_major_version}}.yml"
    - "{{ ansible_distribution }}.yml"
    - "{{ ansible_os_family}}.yml"

- name: Inflate template configs
  include_tasks: j2_inflate.yaml
  when: item.state == 'file'
  with_filetree: ../templates

- name: Install packages using Apt
  become: true
  ansible.builtin.apt:
    update_cache: yes
    cache_valid_time: 3600
    name: "{{ apt_packages }}"
    state: present
  when: ansible_os_family == "Debian"

- name: Build fish shell
  include_tasks:
    file: fish-build.yml
  when: ansible_os_family == "Debian"

- name: Install common Cargo packages
  ansible.builtin.command:
    cmd: "{{ cargo_cmd }} install {{ item }}"
  loop: "{{ common_cargo_packages }}"

- name: Install OS specific Cargo packages
  ansible.builtin.command:
    cmd: "{{ cargo_cmd }} install {{ item }}"
  loop: "{{ cargo_packages | default ([]) }}"

- name: Install using MacPorts
  command: port -N install "{{ item }}"
  when: ansible_distribution == "MacOSX"
  with_items: "{{ macports_packages }}"

- name: Copy configs
  synchronize:
    src: "{{ item }}"
    dest: "{{ ansible_env.HOME }}"
  loop: "{{ dotfiles }}"

- name: Install fonts
  include_tasks: fonts_install.yaml

- name: Install Pip packages for current user
  shell: pip install --upgrade {{ item }}
  with_items: "{{ common_pip_packages }}"

- name: Install common Go packages
  command: go install {{ item }}
  with_items: "{{ common_go_packages }}"

- name: Install common Node packages
  command: npm install -g {{ item }}
  with_items: "{{ common_node_packages }}"
