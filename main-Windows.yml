---
- name: Update PATH
  hosts: win
  gather_facts: no
  become_user: "{{ blueprint_user }}"
  become_method: runas
  become: yes
  tasks:
    - name: Add a directory to the user PATH
      ansible.windows.win_environment:
        name: PATH
        state: present
        value: "{{ custom_path }}"
        level: user
  tags:
    - always

- name: Install Packages
  hosts: win
  gather_facts: no
  become_user: "{{ blueprint_user }}"
  become: yes
  become_method: runas
  tasks:
    - name: Install WinGet packages
      ansible.windows.win_shell: | 
        winget install --accept-source-agreements --accept-package-agreements --disable-interactivity --uninstall-previous -e --id {{ item }}
      ignore_errors: yes
      with_items: "{{ winget_packages }}"
      register: result
      failed_when:
        - result.rc != 0
        - '"No newer package versions are available from the configured sources." not in result.stdout'
      changed_when:
        - result.rc == 0
      tags:
        - winget

    - name: Upgrade existing WinGet packages
      ansible.windows.win_shell: |
          winget upgrade --all --accept-source-agreements --accept-package-agreements --disable-interactivity
      tags:
        - never
        - upgrade

    - name: Uninstall Windows web experience
      ansible.windows.win_shell: |
        winget uninstall --id 9MSSGKG348SP
      when: ansible_os_family == "Windows"
      register: result
      failed_when:
        - result.rc != 0
        - '"No installed package found matching input criteria." not in result.stdout'
      changed_when:
        - result.rc == 0
        - '"No installed package found matching input criteria." not in result.stdout'
      tags:
        - never
        - autoremove

    - name: Install common Go packages for Windows
      ansible.windows.win_shell: |
          go install -ldflags="-s -w" {{ item }}
      environment:
        CGO_ENABLED: 1
        CC: clang
      with_items: "{{ common_go_packages }}"
      tags:
        - go

    - name: Install common Node packages
      ansible.windows.win_powershell:
        script: npm install -g {{ item }}
      with_items: "{{ common_node_packages }}"
      tags:
        - node

    - name: Install common Cargo packages
      ansible.windows.win_shell: |
        & '{{ cargo_cmd }}' install {{ item }}
      loop: "{{ common_cargo_packages }}"
      tags:
        - cargo
      environment: 
        CARGO_HOME: "{{ blueprint_user_home }}/.cargo"

    - name: Install Windows specific Cargo packages
      ansible.windows.win_shell: |
        & '{{ cargo_cmd }}' install {{ item }}
      loop: "{{ cargo_packages | default ([]) }}"
      tags:
        - cargo
      environment:
        CARGO_HOME: "{{ blueprint_user_home }}/.cargo"

  environment:
    LD_LIBRARY_PATH: "{{ blueprint_user_home }}/.pyenv/versions/3.12.0/lib/"
    PATH: "{{ custom_path }}"
