---
- name: Install packages
  hosts: win
  become: true
  tasks:
    - name: Install WinGet packages
      ansible.windows.win_shell: | 
        winget install --accept-source-agreements --accept-package-agreements --disable-interactivity --uninstall-previous -e --id {{ item }}
      ignore_errors: yes
      with_items: "{{ app_ids }}"
      vars:
        app_ids:
          - Microsoft.Edge
          - Git.Git
          - vim.vim
          - Microsoft.VisualStudio.2022.BuildTools
          - Microsoft.VCRedist.2015+.x64
          - Microsoft.VCRedist.2015+.x86
          - GoLang.Go
          - Brave.Brave
          - Microsoft.Teams
          - Microsoft.WindowsTerminal
          - Rustlang.Rust.MSVC
          - dorssel.usbipd-win
          - Yubico.YubikeyManager
          - Microsoft.Azure.StorageExplorer
          - Alacritty.Alacritty
          - Microsoft.OpenSSH.Beta
          - Microsoft.OneDrive
          - Microsoft.DotNet.Runtime.6
          - Hugo.Hugo.Extended
          - RedHat.Podman
          - GnuPG.GnuPG
          # - LocalSend.LocalSend # Installation fails
          - qBittorrent.qBittorrent
          - NordSecurity.NordVPN
          - Python.Python.3.12
          - JetBrains.IntelliJIDEA.Community
      when: ansible_os_family == "Windows"
      register: result
      failed_when:
        - result.rc != 0
        - '"No newer package versions are available from the configured sources." not in result.stdout'
      changed_when:
        - result.rc == 0
      tags:
        - winget

    - name: Upgrade existing WinGet packages
      ansible.windows.win_shell: |
          winget upgrade --all --accept-source-agreements --accept-package-agreements --disable-interactivity
      when: ansible_os_family == "Windows"
      tags:
        - never
        - upgrade

    - name: Install common Go packages for Windows
      ansible.windows.win_shell: |
          go install -ldflags="-s -w" {{ item }}
      environment:
        CGO_ENABLED: 1
      with_items: "{{ common_go_packages }}"
      when: ansible_os_family == "Windows"
      tags:
        - go

#     - name: Install common Node packages
#       ansible.windows.win_powershell:
#         script: npm install -g {{ item }}
#       with_items: "{{ common_node_packages }}"
#       tags:
#         - node

    - name: Install common Cargo packages
      ansible.windows.win_shell: |
        & '{{ cargo_cmd }}' install {{ item }}
      loop: "{{ common_cargo_packages }}"
      tags:
        - cargo
      environment: 
        CARGO_HOME: "{{ blueprint_user_home }}/.cargo"

    - name: Install Windows specific Cargo packages
      ansible.windows.win_shell: |
        & '{{ cargo_cmd }}' install {{ item }}
      loop: "{{ cargo_packages | default ([]) }}"
      tags:
        - cargo
      environment:
        CARGO_HOME: "{{ blueprint_user_home }}/.cargo"

  environment:
    LD_LIBRARY_PATH: "{{ blueprint_user_home }}/.pyenv/versions/3.12.0/lib/"


